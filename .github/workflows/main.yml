name: docker buildx

# Build containers when:
#   1. pushed to 'master', a 'v*' version branch, or 'v*' tag. This will also push containers to DockerHub
#   2. pull request is opened on 'master' or a 'v*' version branch. This will NOT push containers to DockerHub (just build for testing)
on:
  push:
    branches: 
      - 'master'
      - 'v*'
    tags:
      - 'v*'
    paths:
      - 'software/**'
  pull_request:
    branches: 
      - 'master'
      - 'v*'
    tags:
      - 'v*'
    paths:
      - 'software/**'

jobs:
  docker:
    strategy:
      matrix:
        service:
          - gps2tsdb

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prepare
        run: |
          DOCKER_USERNAME=abalmos
          DOCKER_IMAGE=isoblue/${{ matrix.service }}
          DOCKER_PLATFORMS=linux/amd64,linux/arm/v7
          VERSION=edge
          
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#regs/tags/v}
          fi
          
          TAGS="--tag ${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS --tag ${DOCKER_IMAGE}:latest"
          fi
          
          echo ::set-output name=docker_username::${DOCKER_USERNAME}
          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=buildx_args::--platform ${DOCKER_PLATFORMS} \
            --build-arg VERSION=${VERSION} \
            --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') \
            --build-arg GIT_REF=${GITHUB_SHA::8} \
            ${TAGS} --file Dockerfile .
            
      - name: Set up docker buildx
        uses: crazy-max/ghaction-docker-buildx@v3

      - name: Docker Buildx (build)
        run: |
          cd software/${{ matrix.service }}
          docker buildx build --output "type=image,push=false" ${{ steps.prepare.outputs.buildx_args }}
